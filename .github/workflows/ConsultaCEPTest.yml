# # This is a basic workflow to help you get started with Actions

# name: CI Consulta CEP

# # Controls when the action will run. 
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
#   schedule:
#     - cron: "0 */1 * * *"

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a set of commands using the runners shell
#       - name: Step 1 Check version Newman and Node
#         run: |
#           newman --version
#           node --version
          
#       # Runs a single command using the runners shell      
#       - name: Step 2 Install Newman-Reporter-Htmlextra
#         run: sudo npm install -g newman-reporter-htmlextra
        
#       # Runs a set of commands using the runners shell
#       - name: Step 3 Execute collection
#         run: newman run ./test.json -e ./qa.json --reporters cli, -r htmlextra --reporter-htmlextra-export ./results/Report.html
   
#       # Runs a set of commands using the runners shell
#       - name: Step 4 Archive production artifacts
#         uses: actions/upload-artifact@v2
#         with:
#             name: report
#             path: ./results/Report.html


#allure

name: Run Smoke Tests

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Test scenario tags"
        required: true
        default: "smoke"

jobs:
  run_smoke_tests:
    runs-on: ubuntu-20.04

    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: ./tests

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Step 1 Check version Newman and Node
        run: |
          newman --version
          node --version

      - name: Step 2 Install Newman-Reporter-Htmlextra
        run: sudo npm install -g newman-reporter-htmlextra

      - name: Prepare Allure history
        run: |
          cd ..
          mkdir -p allure-results

      - name: Step 3 Execute collection
        run: newman run ./test.json -e ./qa.json --reporters cli, -r htmlextra --reporter-htmlextra-export --alluredir=../allure-results

      # - name: Run tests with pytest
      #   run: |
      #     python -m pytest -v --gherkin-terminal-reporter -s --tags="${{ github.event.inputs.tags }}" --alluredir=../allure-results

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure report action
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 5

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history